source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
View(plot.td_um())
View(plot.td_um)
log(1)
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
x <- list()
x$a
x$a %||% F
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
exp(log(1:10))
exp(seq(log(1), log(10), length.out = 10))
log(seq(exp(1), exp(10), length.out = 10))
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
dev.off()
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
warnings()
log(0)
source("C:/Users/isaac/Projects/tempodisco/R/td_bclm.R")
rm(list = ls())
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
dev.off()
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
data("td_bc_single_ptpt")
mod <- td_bcm(td_bc_single_ptpt, discount_function = c('hyperbolic', 'exponential'))
plot(mod, log='x')
plot(mod)
plot(mod, type = 'endpoints')
plot(mod, type = 'link')
mod <- td_bcm(td_bc_single_ptpt, discount_function = c('hyperbolic'))
plot(mod, log = 'x')
data("td_ip_simulated_ptpt")
head(td_ip_simulated_ptpt)
mod <- td_ipm(td_ip_simulated_ptpt)
mod
plot(mod, log = 'x')
mod <- td_ipm(td_ip_simulated_ptpt, discount_function = c('hyperbolic', 'exponential'))
plot(mod, log = 'x')
tail(td_ip_simulated_ptpt)
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
View(AUC)
source("C:/Users/isaac/Projects/schemas/code/prolific-data-parsing/parse-expt-3.R")
hist(aggd$total_score)
hist(aggd$total_score, breaks = 30)
hist(aggd$total_score, breaks = 50)
source("C:/Users/isaac/Projects/schemas/code/prolific-data-parsing/parse-expt-3.R")
source("C:/Users/isaac/Projects/schemas/code/prolific-data-parsing/parse-expt-3.R")
install.packages('DT')
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
setwd(lib_path)
library(covr)
report()
package_coverage()
devtools::load_all(lib_path)
package_coverage()
rm(list = ls())
package_coverage(quiet = F)
detach("package:tempodisco", unload=TRUE)
package_coverage(quiet = F)
package_coverage(quiet = F)
package_coverage(quiet = F)
package_coverage(quiet = F)
package_coverage(quiet = F)
package_coverage(quiet = F)
report()
install.packages('htmltools')
cov <- package_coverage(quiet = F)
View(cov)
report(cov)
report(cov, file = 'C:/Users/isaac/report')
report(cov, file = 'C:/Users/isaac/report.html')
report(cov, file = 'C:/Users/isaac/report.pdf')
report(file = 'cov-report.html')
formals(td_fn)$predefined
report(file = 'cov-report.html')
devtools::test()
report(file = 'cov-report.html')
..
.. <- 1
..
list(a = 1, b = 2, c = 3)
xlist(a = 1, b = 2, c = 3)
x <- list(a = 1, b = 2, c = 3)
x[c('a', 'b')]
x[c('a', 'b')] <- NULL
x
devtools::test()
devtools::test()
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
devtools::load_all(lib_path)
data("td_bc_single_ptpt")
mod <- td_bcm(td_bc_single_ptpt, discount_function = 'exponential')
plot(mod)
args
devtools::load_all(lib_path)
plot(mod)
args
plot(mod, log = 'x')
dev.off()
ED50(mod)
mod <- td_bcm(td_bc_single_ptpt, discount_function = 'model-free')
ED50(mod)
class(ED50(mod))
class(10.1)
typeof(ED50(mod))
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
report(file = 'report.html')
detach('tempodisco', unload = T)
detach('package:tempodisco', unload = T)
report(file = 'report.html')
library(tempodisco)
devtools::load_all()
?td_bclm
# Get all possible combinations of inputs
models <- eval(formals(td_bclm)$model)
models
source("C:/Users/isaac/Projects/tempodisco/tests/testthat/test-td_bclm.R")
detach('package:tempodisco', unload = T)
report(file = 'report.html')
devtools::test()
devtools::test_active_file()
source("C:/Users/isaac/Projects/tempodisco/tests/testthat/test-td_bclm.R")
mod
ED50(mod)
mod$config$discount_function
mod$config$discount_function$ED50
coef(mod)
coef(mod, df_par = T)
devtools::test()
detach('package:tempodisco', unload = T)
report(file = )
report(file = 'report.html')
report(file = 'report.html')
expect_named(coef(mod), )
?td_ipm
??td_ipm
data("td_ip_simulated_ptpt")
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
devtools::load_all(lib_path)
?td_ipm
detach('package:tempodisco', unload = T)
report(file = 'report.html')
devtools::test()
devtools::test()
devtools::test()
df
df[, c(1,2)]
devtools::test()
df[, 1:2]
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
devtools::load_all(lib_path)
td_ipm(df[, 1:2])
detach('package:tempodisco', unload = T)
devtools::test()
td_ipm(df[, 1:2])
df[, 1:2]
df[, 0:1]
df[, 2:3]
df
df
df[, 1]
devtools::test()
report(file = 'report.html')
detach('package:tempodisco', unload = T)
report(file = 'report.html')
report(file = 'report.html')
report(file = 'report.html')
?report
report(file = 'report.html')
report(file = 'report.html')
?report
report(file = 'report.html')
mod
df
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
devtools::load_all(lib_path)
mod <- td_bcm(df, 'hyperbolic')
mod
get_transform(mod$config)
mod$config$gamma_scale
devtools::load_all(lib_path)
plot(mod)
devtools::load_all(lib_path)
plot(mod)
devtools::load_all(lib_path)
plot(mod)
qfunc
transform
devtools::load_all(lib_path)
plot(mod)
x
val_del <- mean(mod$data$val_del)
val_del
devtools::load_all(lib_path)
plot(mod)
gamma
mod
td_bclm(df)
mod <- td_bclm(df)
detach('package:tempodisco', unload = T)
report(file = 'report.html')
report(file = 'report.html')
devtools::check()
devtools::test()
arg_vals <- list(
fixed_ends = c(T, F),
fit_err_rate = c(T, F),
choice_rule = c('logistic', 'probit', 'power'),
discount_function = 'hyperbolic')
arg_combos <- do.call(expand.grid, c(arg_vals, list(stringsAsFactors = F)))
arg_combos
class(arg_combos)
# Get combinations of inputs
arg_vals <- list(
fixed_ends = c(T, F),
fit_err_rate = c(T, F),
choice_rule = c('logistic', 'probit', 'power'),
discount_function = 'hyperbolic')
arg_combos <- do.call(expand.grid, c(arg_vals, list(stringsAsFactors = F)))
arg_combos <- rbind(
arg_combos,
data.frame(
fixed_ends = F,
fit_err_rate = F,
choice_rule = 'logistic',
c('all', 'model-free', 'dual-systems-exponential', 'custom')
))
arg_combos
arg_combos <- rbind(
arg_combos,
data.frame(
fixed_ends = F,
fit_err_rate = F,
choice_rule = 'logistic',
discount_function = c('all', 'model-free', 'dual-systems-exponential', 'custom')
))
arg_combos
detach('package:tempodisco', unload = T)
devtools::test()
report(file = 'report.html')
detach('package:tempodisco', unload = T)
report(file = 'report.html')
data.frame(a = 1:2, b = 1:3, c = 1:4)
data.frame(a = 1:2, c = 1:4)
usethis::use_github_action("check-standard")
usethis::use_github_action("test-coverage")
%||%
NULL %||% 1
devtools::check()
`%||%` <- function(x, y) {
if (!is.null(x)) x else y
}
NULL `%||%` 1
NULL %||% 1
%||%
rlang
`%or%` <- function(x, y) {
if (!is.null(x)) x else y
}
1 %or% 2
NULL %or% 2
`%def%` <- function(x, y) {
if (is.null(x)) {
y
} else {
x
}
}
NULL %de% 2
NULL %def% 2
1 %def% 2
devtools::test()
devtools::check()
devtools::check()
devtools::check()
?td_bc_single_ptpt
devtools::document()
pkgload::dev_help('td_bc_single_ptpt')
devtools::document()
pkgload::dev_help('td_bc_single_ptpt')
td_bc_single_ptpt
devtools::document()
pkgload::dev_help('td_bc_single_ptpt')
data("td_bc_study")
length(unique(td_bc_study$id))
devtools::check()
?residuals
?residuals.glm
View(residuals.glm)
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
getwd()
devtools::load_all()
mod
plot(mod)
devtools::load_all()
plot(mod)
devtools::load_all()
plot(mod)
...
list(...)
plot()
plot(1:10)
dev.off()
dev.off()
plot(mod)
dev.off()
devtools::check()
?na.omit
td_bcm()
td_bcm()
devtools::load_all()
td_bcm()
setdiff(c('a', 'b', 'c'), c('a', 'b'))
setdiff(c('a', 'b', 'c'), c('a', 'b', 'd', 'e'))
setdiff(c('a', 'b'), c('a', 'c', 'd'))
setdiff(c('a', 'b'), c('a', 'b', 'c', 'd'))
devtools::test()
devtools::test()
devtools::test()
devtools::test()
mod
td_bcm(td_bc_single_ptpt, discount_function = 'model-free')
mod <- td_bcm(td_bc_single_ptpt, discount_function = 'model-free')
plot(mod)
plot(mod, log = 'x')
coef(mod)
sort(coef(mod))
coef(mod)
is(1, c('numeric', 'character'))
inherits(1, c('numeric', 'character'))
inherits(1, c('numeric', 'character', 'three'))
is(data.frame(a = 1), 'data.frame')
mod$config$discount_function$name
nonsys
mod
coef(mod)
names(coef(mod))
gsub('del_', '', names(coef(mod)))
devtools::load_all()
?nonsys
devtools::load_all()
devtools::document()
?nonsys
devtools::document()
devtools::load_all()
?nonsys
devtools::document()
?nonsys
data("td_bc_single_ptpt")
mod <- td_bcm(td_bc_single_ptpt, discount_function == 'model-free')
mod <- td_bcm(td_bc_single_ptpt, discount_function = 'model-free')
nonsys(mod)
devtools::load_all()
nonsys(mod)
cf
cf['gamma'] <- c()
grep('del_', names(cf))
cf <- coef(obj)
cf <- cf[grep('del_', names(cf))]
cf
indiffs <- unname(cf)
delays <- as.numeric(gsub('del_', '', names(coef(mod))))
indiffs
delays
data("td_bc_single_ptpt")
mod <- td_bcm(td_bc_single_ptpt, discount_function = 'model-free')
nonsys(mod)
devtools::load_all()
nonsys(mod)
devtools::load_all()
nonsys(mod)
C1
C2
c(C1 = C1, C2 = C2)
data("td_ip_simulated_ptpt")
any(nonsys(td_ip_simulated_ptpt))
devtools::load_all()
nonsys(data.frame(del = 1:3, indiff = 0.5, 0.8, 0.9))
devtools::load_all()
nonsys(data.frame(del = 1:3, indiff = 0.5, 0.8, 0.9))
indiffs
delays
idx
nonsys(data.frame(del = 1:3, indiff = c(0.5, 0.8, 0.9)))
# On a model
data("td_bc_single_ptpt")
mod <- td_bcm(td_bc_single_ptpt, discount_function = 'model-free')
any(nonsys(mod))
devtools::load_all()
ns
# On a model
data("td_bc_single_ptpt")
mod <- td_bcm(td_bc_single_ptpt, discount_function = 'model-free')
ns <- nonsys(mod)
expect_named(ns)
expect_false(any(ns))
expect_is(ns, 'logical')
expect_type(ns, 'logical')
source("C:/Users/isaac/Projects/tempodisco/tests/testthat/test-nonsys.R")
source("C:/Users/isaac/Projects/tempodisco/tests/testthat/test-nonsys.R")
devtools::test()
devtools::check()
devtools::check()
devtools::check()
2^-1
dd <- read.csv('dev/adj-amd.csv')
getwd()
dd <- read.csv('dev/adj-amt.csv')
dd$imm_chosen <- dd$imm_sel
dd$del <- gsum(dd$delay
dd$del <- gsub(' days', '', dd$delay)
dd$del
dd$del <- as.numeric(dd$del)
dd$val_imm <- dd$immediate_value
dd$val_del <- dd$delayed_value
write.csv(dd, 'dev/adj-amt.csv')
function adj_amt_indiffs(data, block_indic = 'del', order_indic = NULL) {
adj_amt_indiffs <- function(data, block_indic = 'del', order_indic = NULL) {
browser()
require_columns(data, c('val_imm', 'val_del', 'imm_chosen', block_indic))
by(data, data[[block_indic]] function(block) {
adj_amt_indiffs <- function(data, block_indic = 'del', order_indic = NULL) {
browser()
require_columns(data, c('val_imm', 'val_del', 'imm_chosen', block_indic))
by(data, data[[block_indic]], function(block) {
browser()
if (!is.null(order_id)) {
block <- block[order(block[[order_indic]]), ]
}
# Validation
final_imm_chosen <- block$imm_chosen[nrow(block)]
adj_amt <- 2^-nrow(block)
adj_dir <- ifelse(final_imm_chosen, -1, 1)
data.frame()
})
}
adj_amt_indiffs(dd)
block
devtools::load_all()
adj_amt_indiffs(dd, order_indic = 'trial_index')
rm(list = ls())
read.csv('dev/adj-amt.csv')
dd <- read.csv('dev/adj-amt.csv')
devtools::load_all()
adj_amt_indiffs(dd, order_indic = 'trial_index')
block
block
diff(dd$val_imm)
diff(block$val_imm)
abs(diff(block$val_imm))
block_id <- block[[block_indic]]
devtools::load_all()
devtools::load_all()
adj_amt_indiffs(dd, order_indic = 'trial_index')
adj_amt_indiffs(dd, order_indic = 'imm_sel')
devtools::load_all()
adj_amt_indiffs(dd, order_indic = 'imm_sel')
devtools::load_all()
adj_amt_indiffs(dd, order_indic = 'imm_sel')
devtools::load_all()
adj_amt_indiffs(dd, order_indic = 'imm_sel')
adj_amt_indiffs(dd, order_indic = 'trial_idx')
adj_amt_indiffs(dd, order_indic = 'trial_index')
c(NULL)
c(1, NULL)
devtools::load_all()
adj_amt_indiffs(dd, order_indic = 'trial_idx')
adj_amt_indiffs(dd, order_indic)
devtools::load_all()
adj_amt_indiffs(dd, order_indic)
order_indic
c('val_imm', 'val_del', 'imm_chosen',
block_indic, order_indic)
order_indic
adj_amt_indiffs(dd, order_indic)
order_indic
c(1, order_indic)
c(block_indic, order_indic)
adj_amt_indiffs(dd, order_indic)
c(block_indic, order_indic)
devtools::load_all()
adj_amt_indiffs(dd, order_indic)
devtools::load_all()
adj_amt_indiffs(dd, order_indic)
devtools::load_all()
devtools::load_all()
adj_amt_indiffs(dd, order_indic)
devtools::load_all()
adj_amt_indiffs(dd, order_indic)
order_indic
is.null(order_indic)
q
devtools::load_all()
adj_amt_indiffs(dd, order_indic)
devtools::load_all()
adj_amt_indiffs(dd, order_indic)
devtools::load_all()
adj_amt_indiffs(dd, order_indic)
devtools::load_all()
adj_amt_indiffs(dd, order_indic)
req_cols <- c('val_imm', 'val_del', 'imm_chosen',
block_indic)
order_indic
