?td_bclm
devtools::document(lib_path)
devtools::load_all(lib_path)
?td_bclm
devtools::document(lib_path)
?td_bclm
devtools::document(lib_path)
?td_bclm
devtools::document(lib_path)
?td_bclm
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
roxygen2::roxygenise(lib_path)
devtools::document(lib_path)
devtools::load_all(lib_path)
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
roxygen2::roxygenise(lib_path)
devtools::load_all(lib_path)
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
roxygen2::roxygenise(lib_path)
devtools::load_all(lib_path)
View(td_fn)
source("C:/Users/isaac/Projects/schemas/code/prolific-data-parsing/parse-expt-3.R")
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
View(td_bclm())
View(td_bclm)
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
# random generics
print(mod)
ED50(mod)
AUC(mod)
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
# prediction
fitted(mod)
predict(mod, newdata = data.frame(del = 0:1000), type = 'indiff')
arg_combo_idx
cat(sprintf('Arguments:\n'))
print(arg_combo)
arg_combo <- as.list(unlist(arg_combo))
arg_combo <- list(model = arg_combos[arg_combo_idx, ])
cat(sprintf('Arguments:\n'))
print(arg_combo)
arg_combo <- as.list(unlist(arg_combo))
mod <- do.call(td_bclm, c(list(data = df), arg_combo))
# random generics
print(mod)
ED50(mod)
AUC(mod)
BIC(mod)
AIC(mod)
AIC(mod, k = 5)
logLik(mod)
coef(mod)
coef(mod, df_par = T)
coef(mod, df_par = F)
mod
coefficients(mod)
getS3method('coef', 'glm')
getS3method('coefficients', 'glm')
getS3method('coefficients', 'lm')
getS3method('proint', 'lm')
getS3method('print', 'lm')
mod$coefficients
mod$config
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
dev.off()
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
plot(mod, type = 'scores')
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
# Gumbel quantile distribution
qgumbel <- function(p, location = 0, scale = 1) {
location - scale*log(-log(p))
}
x <- seq(0, 1, length.out = 100)
plot(qgumbel(x) ~ x)
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
dev.off()
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
dev.off()
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
dev.off()
source("C:/Users/isaac/Projects/tempodisco/tests/test-ipms.R")
dev.off()
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
dev.off()
source("C:/Users/isaac/Projects/tempodisco/tests/test-bcms.R")
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
roxygen2::roxygenise(lib_path)
devtools::document(lib_path)
devtools::load_all(lib_path)
?td_bcm
devtools::document(lib_path)
?td_bcm
devtools::document(lib_path)
?td_bcm
devtools::document(lib_path)
?td_ipm
df <- data("td_single_ptpt")
mod <- td_ipm(df, discount_function = 'a')
mod <- td_ipm(df, discount_function = 'all')
data("td_single_ptpt")
data(td_single_ptpt)
rm(list = ls())
data(td_single_ptpt)
mod <- td_bcm(td_single_ptpt)
mod <- td_bcm(td_single_ptpt, discount_function = "hyperbolic", fixed_ends = T)
plot(mod)
plot(mod, type = 'link')
plot(mod, type = 'endpoints')
mod
custom_discount_function <- td_fn(
name = 'custom',
fn = function(data, p) 1 / (1 + log(data$del*p['m'] + 1)),
par_starts = list(m = c(0.001, 0.1)),
par_lims = list(m = c(0, Inf)),
ED50 = function(p) 'non-analytic'
)
custom_discount_function
devtools::document(lib_path)
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
roxygen2::roxygenise(lib_path)
devtools::document(lib_path)
devtools::load_all(lib_path)
?td_bcm
data
# Generate data
p_imm <- list(
'normal' = function(df) plogis( 1*( df$val_imm - df$val_del* 1 / (1 + 0.001*(df$del)) ) ) # Normal
# 'all-imm' = function(df) 1, # All immediate chosen
# 'all-del' = function(df) 0, # All delayed chosen
# 'random' = function(df) runif(nrow(df)) # Random
)
datasets <- list()
data("td_single_ptpt")
for (ptpt in names(p_imm)) {
df <- data.frame(val_imm = seq(1, 99, length.out = 10), val_del = 100, del = rep(exp(1:10), each=10))
df$imm_chosen <- runif(nrow(df)) < p_imm[[ptpt]](df)
datasets[[ptpt]] <- df
}
mod <- td_bcm(td_single_ptpt, discount_function = "hyperbolic", fixed_ends = T)
# Get all possible combinations of inputs
arg_vals <- list(model = eval(formals(td_bclm)[['model']]))
mod <- td_bcm(td_single_ptpt, discount_function = "hyperbolic", fixed_ends = T)
arg_combos <- do.call(expand.grid, c(arg_vals, list(stringsAsFactors = F)))
mod <- td_bcm(td_single_ptpt, discount_function = "hyperbolic", fixed_ends = T)
custom_discount_function <- td_fn(
name = 'custom',
fn = function(data, p) 1 / (1 + log(data$del*p['m'] + 1)),
par_starts = list(m = c(0.001, 0.1)),
par_lims = list(m = c(0, Inf)),
ED50 = function(p) 'non-analytic'
)
mod <- td_bcm(td_single_ptpt, discount_function = "hyperbolic", fit_err_rate = T)
plot(mod)
custom_discount_function <- td_fn(
name = 'custom',
fn = function(data, p) 1 / (1 + log(data$del*p['m'] + 1)),
par_starts = list(m = c(0.001, 0.1)),
par_lims = list(m = c(0, Inf)),
ED50 = function(p) 'non-analytic'
)
mod <- td_bcm(td_single_ptpt, discount_function = custom_discount_function, fit_err_rate = T)
plot(mod)
plot(mod, type = 'link')
plot(mod, type = 'endpoints')
mod
devtools::document(lib_path)
?td_bcm
custom_discount_function <- td_fn(
name = 'custom',
fn = function(data, p) (1 - p['b'])*exp(-p['k']*data$del) + p['b'],
par_starts = list(k = c(0.001, 0.1), b = c(0.001, 0.1)),
par_lims = list(k = c(0, Inf), b = c(0, 1)),
ED50 = function(p) 'non-analytic'
)
mod <- td_bcm(td_single_ptpt, discount_function = custom_discount_function, fit_err_rate = T)
mod
plot(mod)
# Generate data
indiff_fns <- list(
'normal' = function(df) plogis(rnorm(nrow(df)) + qlogis(1 / (1 + 0.001*(df$del)))), # Normal with a little noise
'random' = function(df) runif(nrow(df)) # Random
)
datasets <- list()
for (ptpt in names(indiff_fns)) {
df <- data.frame(del = exp(1:10))
df$indiff <- indiff_fns[[ptpt]](df)
datasets[[ptpt]] <- df
}
datasets[['normal']]
datasets[['normal']]$del <- round(datasets$normal$del)
df <- datasets$normal
df
plot(indiff ~ log(del), data = df)
plot(indiff ~ del, data = df)
save(df, file = 'C:/Users/isaac/Projects/tempodisco/data/td_ip_simulated_ptpt.rda')
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
roxygen2::roxygenise(lib_path)
devtools::document(lib_path)
devtools::load_all(lib_path)
data("td_bc_single_ptpt")
mod <- td_bcm(td_single_ptpt, discount_function = "hyperbolic", fixed_ends = T)
mod
# Custom discount function
custom_discount_function <- td_fn(
name = 'custom',
fn = function(data, p) (1 - p['b'])*exp(-p['k']*data$del) + p['b'],
par_starts = list(k = c(0.001, 0.1), b = c(0.001, 0.1)),
par_lims = list(k = c(0, Inf), b = c(0, 1)),
ED50 = function(p) 'non-analytic'
)
mod <- td_bcm(td_single_ptpt, discount_function = custom_discount_function, fit_err_rate = T)
plot(mod)
data("td_ip_simulated_ptpt")
df
td_ip_simulated_ptpt <- df
save(td_ip_simulated_ptpt, file = 'C:/Users/isaac/Projects/tempodisco/data/td_ip_simulated_ptpt.rda')
rm(list = ls())
data("td_ip_simulated_ptpt")
data("td_ip_simulated_ptpt")
mod <- td_bcm(td_ip_simulated_ptpt, discount_function = "hyperbolic", fixed_ends = T)
data("td_ip_simulated_ptpt")
mod <- td_ipm(td_ip_simulated_ptpt, discount_function = "hyperbolic")
plot(mod)
# Custom discount function
custom_discount_function <- td_fn(
name = 'custom',
fn = function(data, p) (1 - p['b'])*exp(-p['k']*data$del) + p['b'],
par_starts = list(k = c(0.001, 0.1), b = c(0.001, 0.1)),
par_lims = list(k = c(0, Inf), b = c(0, 1)),
ED50 = function(p) 'non-analytic'
)
mod <- td_ipm(td_ip_simulated_ptpt, discount_function = custom_discount_function)
plot(mod)
mod
coef(mod)
coef(mod)['k']
data("td_bc_single_ptpt")
td_bc_single_ptpt <- td_single_ptpt
save(td_bc_single_ptpt, file = 'C:/Users/isaac/Projects/tempodisco/data/td_bc_single_ptpt.rda')
data("td_bc_study")
td_bc_study <- td_study
save(td_bc_study, file = 'C:/Users/isaac/Projects/tempodisco/data/td_bc_study.rda')
data("td_bc_single_ptpt")
mod <- td_bclm(td_bc_single_ptpt, model = 'hyperbolic.2')
mod
plot(mod)
coef(mod)
print(coef(mod))
mod <- td_bclm(td_bc_single_ptpt, model = 'hyperbolic.1')
mod
mod
plot(mod)
plot(mod, type = 'endpoints')
plot(mod, type = 'link')
dev.off()
eval(formals(td_bclm)$model)
model <- model[model != 'all']
0.5e-4 == 5e-5
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
# browser()
dev.off()
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
give_up_idx
avg_change
tail(avg_change)
lines(avg_change ~ time, col = 'blue')
length(time)
length(avg_change)
# Did the participant ever give up? Compute running average of force change to determine this.
n_av <- 101
weights <- rep(1/n_av, n_av)
avg_change <- stats::filter(diff(smoothed), weights)
length(avg_change)
length(smoothed)
avg_change <- stats::filter(smoothed, weights)
lines(smoothed ~ time, col = 'blue')
smoothed
head(smoothed)
# Did the participant ever give up? Compute running average of force change to determine this.
n_av <- 100
weights <- rep(1/n_av, n_av)
avg_change <- stats::filter(c(0, diff(smoothed)), weights)
avg_change
plot(avg_change ~ time, type = )
plot(avg_change ~ time, type = 'l')
# Did the participant ever give up? Compute running average of force change to determine this.
n_av <- 200
weights <- rep(1/n_av, n_av)
avg_change <- stats::filter(c(0, diff(smoothed)), weights)
plot(avg_change ~ time, type = 'l')
# Did the participant ever give up? Compute running average of force change to determine this.
n_av <- 100
weights <- rep(1/n_av, n_av)
avg_change <- stats::filter(c(0, diff(smoothed)), weights)
give_up_idx <- avg_change < -0.0005
give_up_idx <- avg_change < -5e-4
plot(avg_change ~ time, type = 'l')
5e-4/2
-2.5e-4
# give_up_idx <- avg_change < -0.0005
give_up_idx <- avg_change < -2.5e-4
# give_up_idx <- avg_change < -0.0005
give_up_idx <- avg_change < -2e-4
give_up_idx
diff(give_up_idx)
diff(give_up_idx) == 1
which(diff(give_up_idx) == 1)
fatigue_events <- diff(neg_slope_idx) == 1
# give_up_idx <- avg_change < -0.0005
neg_slope_idx <- avg_change < -2e-4
fatigue_events <- diff(neg_slope_idx) == 1
dev.off()
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
avg_change[1:10]
fatigue_events
dev.off()
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
dev.off()
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
dev.off()
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
dev.off()
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
plot(avg_change ~ time)
plot(avg_change ~ time, type = 'l')
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
plot(avg_change ~ time, type = 'l')
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
source("C:/Users/isaac/Projects/ebdm/parse-dyna-time-series.R")
plot(avg_change ~ time, type = 'l')
plot(c(0, diff(smoothed)) ~ time, type = 'l')
cumsum(1:10)
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
roxygen2::roxygenise(lib_path)
roxygen2::roxygenise(lib_path)
devtools::document(lib_path)
devtools::load_all(lib_path)
data("td_ip_simulated_ptpt")
data("td_ip_simulated_ptpt")
mod <- td_bclm(td_ip_simulated_ptpt, discount_function = 'hyperbolic')
mod <- td_ipm(td_ip_simulated_ptpt, discount_function = 'hyperbolic')
data("td_bc_single_ptpt")
mod <- td_bcm(td_single_ptpt, discount_function = "hyperbolic", fixed_ends = T)
data("td_bc_single_ptpt")
mod <- td_bcm(td_bc_single_ptpt, discount_function = "hyperbolic", fixed_ends = T)
# Custom discount function
custom_discount_function <- td_fn(
name = 'custom',
fn = function(data, p) (1 - p['b'])*exp(-p['k']*data$del) + p['b'],
par_starts = list(k = c(0.001, 0.1), b = c(0.001, 0.1)),
par_lims = list(k = c(0, Inf), b = c(0, 1)),
ED50 = function(p) 'non-analytic'
)
custom_discount_function
plot(custom_discount_function)
custom_discount_function$fn
custom_discount_function
body(custom_discount_function$fn)
str(custom_discount_function$fn)
print(custom_discount_function$fn)
custom_discount_function$par_lims
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
roxygen2::roxygenise(lib_path)
devtools::document(lib_path)
devtools::load_all(lib_path)
custom_discount_function <- td_fn(
name = 'custom',
fn = function(data, p) (1 - p['b'])*exp(-p['k']*data$del) + p['b'],
par_starts = list(k = c(0.001, 0.1), b = c(0.001, 0.1)),
par_lims = list(k = c(0, Inf), b = c(0, 1)),
ED50 = function(p) 'non-analytic'
)
custom_discount_function
devtools::load_all(lib_path)
custom_discount_function <- td_fn(
name = 'custom',
fn = function(data, p) (1 - p['b'])*exp(-p['k']*data$del) + p['b'],
par_starts = list(k = c(0.001, 0.1), b = c(0.001, 0.1)),
par_lims = list(k = c(0, Inf), b = c(0, 1)),
ED50 = function(p) 'non-analytic'
)
custom_discount_function
mod <- td_bcm(td_single_ptpt, discount_function = custom_discount_function, fit_err_rate = T)
data("td_bc_single_ptpt")
mod <- td_bcm(td_bc_single_ptpt, discount_function = "hyperbolic", fixed_ends = T)
# Custom discount function
custom_discount_function <- td_fn(
name = 'custom',
fn = function(data, p) (1 - p['b'])*exp(-p['k']*data$del) + p['b'],
par_starts = list(k = c(0.001, 0.1), b = c(0.001, 0.1)),
par_lims = list(k = c(0, Inf), b = c(0, 1)),
ED50 = function(p) 'non-analytic'
)
mod <- td_bcm(td_bc_single_ptpt, discount_function = custom_discount_function, fit_err_rate = T)
td_fn('hyperbolic')
devtools::run_examples('tempodisco')
devtools::run_examples(lib_path)
devtools::run_examples(lib_path, run_dontrun = T)
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
devtools::run_examples(lib_path, run_dontrun = T)
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
devtools::run_examples(lib_path, run_dontrun = T)
dev.off()
data("td_bc_single_ptpt")
td_bc_single_ptpt
td_bcm(td_bc_single_ptpt, discount_function = c('hyperoblic', 'exponential'))
mod <- td_bcm(td_bc_single_ptpt, discount_function = c('hyperbolic', 'exponential'))
mod
coef(mod)
plot(mod)
source("C:/Users/isaac/Projects/schemas/code/prolific-data-parsing/parse-expt-3.R")
paste(aggd$id, collapse = ', ') # For copying and pasting to batch session data
# Get completion by stimset
aggd <- aggregate(id ~ stimset_n, df, function(x) length(unique(x)))
paste(aggd$id, collapse = ', ') # For copying and pasting to batch session data
source("C:/Users/isaac/Projects/schemas/code/prolific-data-parsing/parse-expt-3.R")
paste(aggd$id, collapse = ', ') # For copying and pasting to batch session data
# Get completion by stimset
aggd <- aggregate(id ~ stimset_n, df, function(x) length(unique(x)))
paste(aggd$id, collapse = ', ') # For copying and pasting to batch session data
source("C:/Users/isaac/Projects/schemas/code/prolific-data-parsing/parse-expt-3.R")
# Get completion by stimset
aggd <- aggregate(id ~ stimset_n, df, function(x) length(unique(x)))
paste(aggd$id, collapse = ', ') # For copying and pasting to batch session data
source("C:/Users/isaac/Projects/schemas/code/prolific-data-parsing/parse-expt-3.R")
dev.off()
View(td_bclm)
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
View(plot.td_um())
View(plot.td_um)
log(1)
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
x <- list()
x$a
x$a %||% F
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
exp(log(1:10))
exp(seq(log(1), log(10), length.out = 10))
log(seq(exp(1), exp(10), length.out = 10))
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
dev.off()
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
warnings()
log(0)
source("C:/Users/isaac/Projects/tempodisco/R/td_bclm.R")
rm(list = ls())
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
dev.off()
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
data("td_bc_single_ptpt")
mod <- td_bcm(td_bc_single_ptpt, discount_function = c('hyperbolic', 'exponential'))
plot(mod, log='x')
plot(mod)
plot(mod, type = 'endpoints')
plot(mod, type = 'link')
mod <- td_bcm(td_bc_single_ptpt, discount_function = c('hyperbolic'))
plot(mod, log = 'x')
data("td_ip_simulated_ptpt")
head(td_ip_simulated_ptpt)
mod <- td_ipm(td_ip_simulated_ptpt)
mod
plot(mod, log = 'x')
mod <- td_ipm(td_ip_simulated_ptpt, discount_function = c('hyperbolic', 'exponential'))
plot(mod, log = 'x')
tail(td_ip_simulated_ptpt)
source("C:/Users/isaac/Projects/tempodisco/tests/test-bclms.R")
View(AUC)
source("C:/Users/isaac/Projects/schemas/code/prolific-data-parsing/parse-expt-3.R")
hist(aggd$total_score)
hist(aggd$total_score, breaks = 30)
hist(aggd$total_score, breaks = 50)
source("C:/Users/isaac/Projects/schemas/code/prolific-data-parsing/parse-expt-3.R")
source("C:/Users/isaac/Projects/schemas/code/prolific-data-parsing/parse-expt-3.R")
?sink
sink()
invisible(print(1))
invisible(print(1))
capture.output(print(1))
lib_path <- 'C:/Users/isaac/Projects/tempodisco'
setwd(lib_path)
devtools::test()
AUC(mod)
View(AUC)
devtools::test()
x <- plot(1:10)
x
expect_outpu(plot(mod, type = 'summary'))
expect_output(plot(mod, type = 'summary'))
mod
df
expect_output(plot(1:10))
expect_no_error(plot(1:10))
devtools::test()
View(plot.td_um())
View(plot.td_um)
devtools::test()
invisible(plot(1:10))
pdf(NULL)
plot(1:20)
dev.off()
dev.off()
capture.output(plot(1:20))
dev.off()
View(plot.td_um)
devtools::test()
